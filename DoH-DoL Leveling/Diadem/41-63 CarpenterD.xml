<?xml version="1.0" encoding="UTF-8"?>
<!--
Authors:  Kayla / Angles24
-->
<Profile>
<Name>Crafting Carpenter to 63</Name>
<Order>

	<!-- Leave Diadem -->
	<If Condition="(WorldManager.ZoneId == 901)">
		<RunCode Name="Leave"/>
		<WaitTimer WaitTime="3"/>
		<WaitWhile Condition="not GameObjectManager.GetObjectByNPCId(1031694)"/>
	</If>

	<!-- Turn in-->
	<If Condition="WorldManager.ZoneId != 901">
		<While Condition="(HasIshgardItem() &gt; 0) or (HasIshgardGatheringMining() &gt; 0) or (HasIshgardGatheringBotanist() &gt; 0)">
			<GetTo ZoneId="886" XYZ="50.08479, -16, 168.9252"/>
			<RunCode Name="TurnIn"/>
		</While>
	</If>

	<!-- Lv41-63 -->
	<If Condition="(Core.Me.Levels[ClassJobType.Carpenter] &gt; 40) and  (Core.Me.Levels[ClassJobType.Carpenter] &lt; 63)">
		<If Condition="ClassName != ClassJobType.Carpenter">
			<ChangeClass Job="Carpenter"/>
		</If>
		<If Condition="ClassName == ClassJobType.Carpenter">
			<AutoInventoryEquip/>
			<WaitTimer WaitTime="5"/>
			<RunCode Name="SetLisbethJson1" />
		</If>
	</If>

	<!-- Turn in-->
	<If Condition="WorldManager.ZoneId != 901">
		<While Condition="(HasIshgardItem() &gt; 0) or (HasIshgardGatheringMining() &gt; 0) or (HasIshgardGatheringBotanist() &gt; 0)">
			<GetTo ZoneId="886" XYZ="50.08479, -16, 168.9252"/>
			<RunCode Name="TurnIn"/>
		</While>
	</If>

	<!-- Reload Profile -->
	<If Condition="Core.Me.Levels[ClassJobType.Carpenter] &lt; 63">
		<LLoadProfile Path="41-63 CarpenterD.xml"/>
	</If>

	<!-- Load Start -->
	<LogMessage Message="Congrats on Level 63 on Carpenter, moving on."/>
	<AutoInventoryEquip/>
	<WaitTimer WaitTime="5"/>
	<LLoadProfile Path="../Start.xml"/>

</Order>
<CodeChunks>
	<CodeChunk name="Leave">
	<![CDATA[
		if (DutyManager.InInstance)
		{
		DutyManager.LeaveActiveDuty();
		if (await Coroutine.Wait(30000, () => CommonBehaviors.IsLoading))
		{
		await Coroutine.Yield();
		await Coroutine.Wait(Timeout.Infinite, () => !CommonBehaviors.IsLoading);
		await Coroutine.Sleep(1000);
		}
		}
	]]>
	</CodeChunk>
	<CodeChunk Name="TurnIn">
	<![CDATA[
		Logging.Write("[Handin] calling");
		await LlamaLibrary.Utilities.Ishgard.Handin();
	]]>
	</CodeChunk>
	<CodeChunk Name="SetLisbethJson1">
	<![CDATA[
		int amount = 39;
		int level = Core.Me.Levels[ClassJobType.Carpenter];
		int exp = (int)Experience.CurrentExperience;

		amount = (level, exp) switch
		{
		(62, > 1172758) => 1,
		(62, >= 811516) => 2,
		(62, >= 450274) => 3,
		(62, >= 89032) => 4,
		(62, >= 0) => 5,
		(61, > 1183790) => 5,
		(61, >= 822548) => 6,
		(61, >= 461306) => 7,
		(61, >= 100064) => 8,
		(61, >= 0) => 9,
		(60, > 1125822) => 9,
		(60, >= 764580) => 10,
		(60, >= 403338) => 11,
		(60, >= 42096) => 12,
		(60, >= 0) => 13,
		(59, > 889982) => 13,
		(59, >= 528596) => 14,
		(59, >= 167210) => 15,
		(59, >= 0) => 16,
		(58, > 917568) => 16,
		(58, >= 556041) => 17,
		(58, >= 194514) => 18,
		(58, >= 0) => 19,
		(57, > 849270) => 19,
		(57, >= 487600) => 20,
		(57, >= 125930) => 21,
		(57, >= 0) => 22,
		(56, > 688070) => 22,
		(56, >= 326255) => 23,
		(56, >= 0) => 24,
		(55, > 796832) => 24,
		(55, >= 432425) => 25,
		(55, >= 70322) => 26,
		(55, >= 0) => 27,
		(54, > 449443) => 27,
		(54, >= 87052) => 28,
		(54, >= 0) => 29,
		(53, > 366868) => 29,
		(53, >= 3760) => 30,
		(53, >= 0) => 31,
		(52, > 176229) => 31,
		(52, >= 0) => 32,
		(51, > 265672) => 32,
		(51, >= 0) => 33,
		(50, > 297749) => 33,
		(50, >= 0) => 34,
		(49, > 156318) => 34,
		(49, >= 0) => 35,
		(48, > 0) => 35,
		(47, > 225270) => 35,
		(47, >= 0) => 36,
		(46, > 26700) => 36,
		(46, >= 0) => 37,
		(45, > 0) => 37,
		(44, > 0) => 37,
		(43, > 169699) => 37,
		(43, >= 0) => 38,
		(42, > 0) => 38,
		(41, > 85803) => 38,
		(41, >= 0) => 39,
		(40, > 0) => 39,
		(39, > 0) => 39,
		(38, > 98818) => 39,
		(38, >= 0) => 39,
		_ => amount
		};
		
		if (Core.Me.HasAura(1411)) {
			amount = (int)Math.Ceiling((amount + 1) / 2.0);
		}
		
		ff14bot.Helpers.Logging.Write($"Estimated amount of collectables needed to level to next checkpoint: {amount}");
		
		var lisbeth = BotManager.Bots.FirstOrDefault(c => c.Name == "Lisbeth");
		if (lisbeth != null)
		{
			var lisbethObject = lisbeth.GetType().GetProperty("Lisbeth").GetValue(lisbeth);
			if (lisbethObject != null)
			{
				var json = $"[{{'Group':1,'Item':31921,'Amount':{amount},'Enabled':true,'Type':'Carpenter','Collectable':false}}]";
				var orderMethod = lisbethObject.GetType().GetMethod("ExecuteOrders");
				await (Task<bool>)orderMethod.Invoke(lisbethObject, new object[] { json, false });
			}
		}
	]]>
	</CodeChunk>
</CodeChunks>
</Profile>