<?xml version="1.0" encoding="UTF-8"?>
<!--
Authors:  Kayla / Angles24
-->
<Profile>
<Name>Crafting Leatherworker to 80</Name>
<Order>

	<!-- Leave Diadem -->
	<If Condition="(WorldManager.ZoneId == 901)">
		<RunCode Name="Leave"/>
		<WaitTimer WaitTime="3"/>
		<WaitWhile Condition="not GameObjectManager.GetObjectByNPCId(1031694)"/>
	</If>

	<!-- Turn in-->
	<If Condition="WorldManager.ZoneId != 901">
		<While Condition="(HasIshgardItem() &gt; 0) or (HasIshgardGatheringMining() &gt; 0) or (HasIshgardGatheringBotanist() &gt; 0)">
			<GetTo ZoneId="886" XYZ="50.08479, -16, 168.9252"/>
			<RunCode Name="TurnIn"/>
		</While>
	</If>

	<!-- Grade 4 Skybuilders' Longboots -->
	<If Condition="(Core.Me.Levels[ClassJobType.Leatherworker] &gt; 69) and  (Core.Me.Levels[ClassJobType.Leatherworker] &lt; 80)">
		<If Condition="ClassName != ClassJobType.Leatherworker">
			<ChangeClass Job="Leatherworker"/>
		</If>
		<If Condition="ClassName == ClassJobType.Leatherworker">
			<AutoInventoryEquip/>
			<WaitTimer WaitTime="5"/>
			<RunCode Name="SetLisbethJson" />
		</If>
	</If>

	<!-- Turn in-->
	<If Condition="WorldManager.ZoneId != 901">
		<While Condition="(HasIshgardItem() &gt; 0) or (HasIshgardGatheringMining() &gt; 0) or (HasIshgardGatheringBotanist() &gt; 0)">
			<GetTo ZoneId="886" XYZ="50.08479, -16, 168.9252"/>
			<RunCode Name="TurnIn"/>
		</While>
	</If>

	<!-- Reload Profile -->
	<If Condition="Core.Me.Levels[ClassJobType.Leatherworker] &lt; 80">
		<LLoadProfile Path="70-80 LeatherworkerD.xml"/>
	</If>

	<!-- Load Start -->
	<LogMessage Message="Congrats on Level 80 on Leatherworker, moving on."/>
	<AutoInventoryEquip/>
	<WaitTimer WaitTime="5"/>
	<LLoadProfile Path="../Start.xml"/>

</Order>
<CodeChunks>
	<CodeChunk name="Leave">
	<![CDATA[
		if (DutyManager.InInstance)
		{
		DutyManager.LeaveActiveDuty();
		if (await Coroutine.Wait(30000, () => CommonBehaviors.IsLoading))
		{
		await Coroutine.Yield();
		await Coroutine.Wait(Timeout.Infinite, () => !CommonBehaviors.IsLoading);
		await Coroutine.Sleep(1000);
		}
		}
	]]>
	</CodeChunk>
	<CodeChunk Name="TurnIn">
	<![CDATA[
		Logging.Write("[Handin] calling");
		await LlamaLibrary.Utilities.Ishgard.Handin();
	]]>
	</CodeChunk>
	<CodeChunk Name="SetLisbethJson">
	<![CDATA[
		int amount = 45;
		int level = Core.Me.Levels[ClassJobType.Leatherworker];
		int exp = (int)Experience.CurrentExperience;

		amount = (level, exp) switch
		{
		(79, > 4435474) => 1,
		(79, >= 3614948) => 2,
		(79, >= 2794422) => 3,
		(79, >= 1973896) => 4,
		(79, >= 1153370) => 5,
		(79, >= 332844) => 6,
		(79, >= 0) => 7,
		(78, > 4251322) => 7,
		(78, >= 3425368) => 8,
		(78, >= 2599414) => 9,
		(78, >= 1773460) => 10,
		(78, >= 947506) => 11,
		(78, >= 121552) => 12,
		(78, >= 0) => 13,
		(77, > 3612945) => 13,
		(77, >= 2770722) => 14,
		(77, >= 1939345) => 15,
		(77, >= 1107968) => 16,
		(77, >= 276591) => 17,
		(77, >= 0) => 18,
		(76, > 3467790) => 18,
		(76, >= 2576705) => 19,
		(76, >= 1739900) => 20,
		(76, >= 903095) => 21,
		(76, >= 66290) => 22,
		(76, >= 0) => 23,
		(75, > 2945845) => 23,
		(75, >= 2054800) => 24,
		(75, >= 1190875) => 25,
		(75, >= 348646) => 26,
		(75, >= 0) => 27,
		(74, > 3012371) => 27,
		(74, >= 2126732) => 28,
		(74, >= 1241093) => 29,
		(74, >= 381500) => 30,
		(74, >= 0) => 31,
		(73, > 2832884) => 31,
		(73, >= 1947245) => 32,
		(73, >= 1061606) => 33,
		(73, >= 175967) => 34,
		(73, >= 0) => 35,
		(72, > 2438995) => 35,
		(72, >= 1549024) => 36,
		(72, >= 663393) => 37,
		(72, >= 0) => 38,
		(71, > 2778396) => 38,
		(71, >= 1866707) => 39,
		(71, >= 976720) => 40,
		(71, >= 82391) => 41,
		(71, >= 0) => 42,
		(70, > 2080684) => 42,
		(70, >= 1160321) => 43,
		(70, >= 266008) => 44,
		(70, >= 0) => 45,
		(69, > 1921695) => 45,
		(69, >= 0) => 45,
		_ => amount
		};

		if (Core.Me.HasAura(1411)) {
			amount = (int)Math.Ceiling((amount + 1) / 2.0);
		}

		ff14bot.Helpers.Logging.Write($"Estimated amount of collectables needed to level to next checkpoint: {amount}");

		var lisbeth = BotManager.Bots.FirstOrDefault(c => c.Name == "Lisbeth");
		if (lisbeth != null)
		{
			var lisbethObject = lisbeth.GetType().GetProperty("Lisbeth").GetValue(lisbeth);
			if (lisbethObject != null)
			{
				var json = $"[{{'Group':1,'Item':31941,'Amount':{amount},'Enabled':true,'Type':'Leatherworker','Collectable':false}}]";
				var orderMethod = lisbethObject.GetType().GetMethod("ExecuteOrders");
				await (Task<bool>)orderMethod.Invoke(lisbethObject, new object[] { json, false });
			}
		}
	]]>
</CodeChunk>
</CodeChunks>
</Profile>