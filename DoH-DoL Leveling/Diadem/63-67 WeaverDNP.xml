<?xml version="1.0" encoding="UTF-8"?>
<!--
Authors:  Kayla / Angles24
-->
<Profile>
<Name>Crafting Weaver to 67</Name>
<Order>

	<!-- Leave Diadem -->
	<If Condition="(WorldManager.ZoneId == 901)">
		<RunCode Name="Leave"/>
		<WaitTimer WaitTime="3"/>
		<WaitWhile Condition="not GameObjectManager.GetObjectByNPCId(1031694)"/>
	</If>

	<!-- Turn in-->
	<If Condition="WorldManager.ZoneId != 901">
		<While Condition="(HasIshgardItem() &gt; 0) or (HasIshgardGatheringMining() &gt; 0) or (HasIshgardGatheringBotanist() &gt; 0)">
			<GetTo ZoneId="886" XYZ="50.08479, -16, 168.9252"/>
			<RunCode Name="TurnIn"/>
		</While>
	</If>

	<!-- Grade 4 Skybuilders' Broom -->
	<If Condition="(Core.Me.Levels[ClassJobType.Weaver] &gt; 62) and  (Core.Me.Levels[ClassJobType.Weaver] &lt; 67)">
		<If Condition="ClassName != ClassJobType.Weaver">
			<ChangeClass Job="Weaver"/>
		</If>
		<If Condition="ClassName == ClassJobType.Weaver">
			<AutoInventoryEquip/>
			<WaitTimer WaitTime="5"/>
			<RunCode Name="SetLisbethJson" />
		</If>
	</If>

	<!-- Turn in-->
	<If Condition="WorldManager.ZoneId != 901">
		<While Condition="(HasIshgardItem() &gt; 0) or (HasIshgardGatheringMining() &gt; 0) or (HasIshgardGatheringBotanist() &gt; 0)">
			<GetTo ZoneId="886" XYZ="50.08479, -16, 168.9252"/>
			<RunCode Name="TurnIn"/>
		</While>
	</If>

	<!-- Reload Profile -->
	<If Condition="Core.Me.Levels[ClassJobType.Weaver] &lt; 67">
		<LLoadProfile Path="63-67 WeaverDNP.xml"/>
	</If>

	<!-- Load Start -->
	<LogMessage Message="Congrats on Level 67 on Weaver, moving on."/>
	<AutoInventoryEquip/>
	<WaitTimer WaitTime="5"/>
	<LLoadProfile Path="../Start.xml"/>

</Order>
<CodeChunks>
	<CodeChunk name="Leave">
	<![CDATA[
		if (DutyManager.InInstance)
		{
		DutyManager.LeaveActiveDuty();
		if (await Coroutine.Wait(30000, () => CommonBehaviors.IsLoading))
		{
		await Coroutine.Yield();
		await Coroutine.Wait(Timeout.Infinite, () => !CommonBehaviors.IsLoading);
		await Coroutine.Sleep(1000);
		}
		}
	]]>
	</CodeChunk>
	<CodeChunk Name="TurnIn">
	<![CDATA[
		Logging.Write("[Handin] calling");
		await LlamaLibrary.Utilities.Ishgard.Handin();
	]]>
	</CodeChunk>
	<CodeChunk Name="SetLisbethJson">
		<![CDATA[
			int amount = 12;
			int level = Core.Me.Levels[ClassJobType.Alchemist];
			int exp = (int)Experience.CurrentExperience;

			amount = (level, exp) switch
			{
			(66, > 1449736) => 1,
			(66, >= 931472) => 2,
			(66, >= 413208) => 3,
			(66, >= 0) => 4,
			(65, > 1718270) => 4,
			(65, >= 1192890) => 5,
			(65, >= 671068) => 6,
			(65, >= 149246) => 7,
			(65, >= 0) => 8,
			(64, > 1327502) => 8,
			(64, >= 799988) => 9,
			(64, >= 275320) => 10,
			(64, >= 0) => 11,
			(63, > 1357407) => 11,
			(63, >= 812796) => 12,
			(63, >= 0) => 12,
			_ => amount
			};

			if (Core.Me.HasAura(1411)) {
				amount = (int)Math.Ceiling((amount + 1) / 2.0);
			}

			ff14bot.Helpers.Logging.Write($"Estimated amount of collectables needed to level to next checkpoint: {amount}");

			var lisbeth = BotManager.Bots.FirstOrDefault(c => c.Name == "Lisbeth");
			if (lisbeth != null)
			{
				var lisbethObject = lisbeth.GetType().GetProperty("Lisbeth").GetValue(lisbeth);
				if (lisbethObject != null)
				{
					var json = $"[{{'Group':1,'Item':31935,'Amount':{amount},'Enabled':true,'Type':'Alchemist','Collectable':false}}]";
					var orderMethod = lisbethObject.GetType().GetMethod("ExecuteOrders");
					await (Task<bool>)orderMethod.Invoke(lisbethObject, new object[] { json, false });
				}
			}
		]]>
	</CodeChunk>
</CodeChunks>
</Profile>