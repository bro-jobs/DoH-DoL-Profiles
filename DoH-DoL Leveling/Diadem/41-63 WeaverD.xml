<?xml version="1.0" encoding="UTF-8"?>
<!--
Authors:  Kayla / Angles24
-->
<Profile>
<Name>Crafting Weaver to 63</Name>
<Order>

	<!-- Leave Diadem -->
	<If Condition="(WorldManager.ZoneId == 901)">
		<RunCode Name="Leave"/>
		<WaitTimer WaitTime="3"/>
		<WaitWhile Condition="not GameObjectManager.GetObjectByNPCId(1031694)"/>
	</If>

	<!-- Turn in-->
	<If Condition="WorldManager.ZoneId != 901">
		<While Condition="(HasIshgardItem() &gt; 0) or (HasIshgardGatheringMining() &gt; 0) or (HasIshgardGatheringBotanist() &gt; 0)">
			<GetTo ZoneId="886" XYZ="50.08479, -16, 168.9252"/>
			<RunCode Name="TurnIn"/>
		</While>
	</If>

	<!-- Lv41-63 -->
	<If Condition="(Core.Me.Levels[ClassJobType.Weaver] &gt; 40) and  (Core.Me.Levels[ClassJobType.Weaver] &lt; 63)">
		<If Condition="ClassName != ClassJobType.Weaver">
			<ChangeClass Job="Weaver"/>
		</If>
		<If Condition="ClassName == ClassJobType.Weaver">
			<AutoInventoryEquip/>
			<WaitTimer WaitTime="5"/>
			<RunCode Name="SetLisbethJson1" />
		</If>
	</If>

	<!-- Turn in-->
	<If Condition="WorldManager.ZoneId != 901">
		<While Condition="(HasIshgardItem() &gt; 0) or (HasIshgardGatheringMining() &gt; 0) or (HasIshgardGatheringBotanist() &gt; 0)">
			<GetTo ZoneId="886" XYZ="50.08479, -16, 168.9252"/>
			<RunCode Name="TurnIn"/>
		</While>
	</If>

	<!-- Reload Profile -->
	<If Condition="Core.Me.Levels[ClassJobType.Weaver] &lt; 63">
		<LLoadProfile Path="41-63 WeaverD.xml"/>
	</If>

	<!-- Load Start -->
	<LogMessage Message="Congrats on Level 63 on Weaver, moving on."/>
	<AutoInventoryEquip/>
	<WaitTimer WaitTime="5"/>
	<LLoadProfile Path="../Start.xml"/>

</Order>
<CodeChunks>
	<CodeChunk name="Leave">
	<![CDATA[
		if (DutyManager.InInstance)
		{
		DutyManager.LeaveActiveDuty();
		if (await Coroutine.Wait(30000, () => CommonBehaviors.IsLoading))
		{
		await Coroutine.Yield();
		await Coroutine.Wait(Timeout.Infinite, () => !CommonBehaviors.IsLoading);
		await Coroutine.Sleep(1000);
		}
		}
	]]>
	</CodeChunk>
	<CodeChunk Name="TurnIn">
	<![CDATA[
		Logging.Write("[Handin] calling");
		await LlamaLibrary.Utilities.Ishgard.Handin();
	]]>
	</CodeChunk>
	<CodeChunk Name="SetLisbethJson1">
	<![CDATA[
		int amount = 38;
		int level = Core.Me.Levels[ClassJobType.Weaver];
		int exp = (int)Experience.CurrentExperience;

		amount = (level, exp) switch
		{
		(62, > 1171312) => 1,
		(62, >= 808624) => 2,
		(62, >= 445936) => 3,
		(62, >= 83248) => 4,
		(62, >= 0) => 5,
		(61, > 1176560) => 5,
		(61, >= 813872) => 6,
		(61, >= 451184) => 7,
		(61, >= 88496) => 8,
		(61, >= 0) => 9,
		(60, > 1112808) => 9,
		(60, >= 750120) => 10,
		(60, >= 387432) => 11,
		(60, >= 24744) => 12,
		(60, >= 0) => 13,
		(59, > 871184) => 13,
		(59, >= 508352) => 14,
		(59, >= 145520) => 15,
		(59, >= 0) => 16,
		(58, > 889856) => 16,
		(58, >= 526597) => 17,
		(58, >= 163338) => 18,
		(58, >= 0) => 19,
		(57, > 813607) => 19,
		(57, >= 450060) => 20,
		(57, >= 86513) => 21,
		(57, >= 0) => 22,
		(56, > 643564) => 22,
		(56, >= 279726) => 23,
		(56, >= 0) => 24,
		(55, > 744228) => 24,
		(55, >= 378225) => 25,
		(55, >= 13954) => 26,
		(55, >= 0) => 27,
		(54, > 386992) => 27,
		(54, >= 22288) => 28,
		(54, >= 0) => 29,
		(53, > 291381) => 29,
		(53, >= 0) => 30,
		(52, > 483271) => 30,
		(52, >= 86546) => 31,
		(52, >= 0) => 32,
		(51, > 150024) => 32,
		(51, >= 0) => 33,
		(50, > 138049) => 33,
		(50, >= 0) => 34,
		(49, > 0) => 34,
		(48, > 182705) => 34,
		(48, >= 0) => 35,
		(47, > 0) => 35,
		(46, > 134152) => 35,
		(46, >= 0) => 36,
		(45, > 0) => 36,
		(44, > 38014) => 36,
		(44, >= 0) => 37,
		(43, > 0) => 37,
		(42, > 0) => 37,
		(41, > 65660) => 37,
		(41, >= 0) => 38,
		(40, > 0) => 38,
		(39, > 0) => 38,
		(38, > 5210) => 38,
		(38, >= 0) => 38,
		_ => amount
		};
		
		if (Core.Me.HasAura(1411)) {
			amount = (int)Math.Ceiling((amount + 1) / 2.0);
		}
		
		ff14bot.Helpers.Logging.Write($"Estimated amount of collectables needed to level to next checkpoint: {amount}");
		
		var lisbeth = BotManager.Bots.FirstOrDefault(c => c.Name == "Lisbeth");
		if (lisbeth != null)
		{
			var lisbethObject = lisbeth.GetType().GetProperty("Lisbeth").GetValue(lisbeth);
			if (lisbethObject != null)
			{
				var json = $"[{{'Group':1,'Item':31926,'Amount':{amount},'Enabled':true,'Type':'Weaver','Collectable':false}}]";
				var orderMethod = lisbethObject.GetType().GetMethod("ExecuteOrders");
				await (Task<bool>)orderMethod.Invoke(lisbethObject, new object[] { json, false });
			}
		}
	]]>
	</CodeChunk>
</CodeChunks>
</Profile>