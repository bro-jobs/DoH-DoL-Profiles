<?xml version="1.0" encoding="UTF-8"?>
<Profile>
<Name>Crafting Lv80 Gear</Name>
<Order>
<RunCode Name="SwitchCombatJob"/>
	<GetTo ZoneId="886" XYZ="-7.472548, -16, 162.5581"/>
    <!-- Buy Command VII materia from Firmament Scrip Exchange -->
    <BuyShopExchangeCurrency NpcId="1031680" ItemId="25195" Count="99" SelectString="2"/>

	<!-- Craft Lv80 Gear -->
	<RunCode Name="SwitchCombatJob"/>
	<Lisbeth Json="[{'Id':1,'Group':1,'Item':33914,'Amount':1900,'Enabled':true,'Type':'GatherMasterpiece','AmountMode':'Restock'}]"/>
	
	<!-- Gatherer gear -->
	
	<While Condition="not HasItem(31780)">
	<BuyInclusionShopItem ItemId="31780" Count="1"/>
	</While>
	<While Condition="not HasItem(31781)">
	<BuyInclusionShopItem ItemId="31781" Count="1"/>
	</While>
	<While Condition="not HasItem(31791)">
	<BuyInclusionShopItem ItemId="31791" Count="1"/>
	</While>
	<While Condition="not HasItem(31792)">
	<BuyInclusionShopItem ItemId="31792" Count="1"/>
	</While>
	<While Condition="not HasItem(31798)">
	<BuyInclusionShopItem ItemId="31798" Count="1"/>
	</While>
	<While Condition="not HasItem(31799)">
	<BuyInclusionShopItem ItemId="31799" Count="1"/>
	</While>
	<While Condition="not HasItem(31800)">
	<BuyInclusionShopItem ItemId="31800" Count="1"/>
	</While>
	<While Condition="not HasItem(31801)">
	<BuyInclusionShopItem ItemId="31801" Count="1"/>
	</While>
	<While Condition="not HasItem(31802)">
	<BuyInclusionShopItem ItemId="31802" Count="1"/>
	</While>
	<While Condition="not HasItem(31809)">
	<BuyInclusionShopItem ItemId="31809" Count="1"/>
	</While>
	<While Condition="not HasItem(31810)">
	<BuyInclusionShopItem ItemId="31810" Count="1"/>
	</While>
	<While Condition="not HasItem(31811)">
	<BuyInclusionShopItem ItemId="31811" Count="1"/>
	</While>
	<While Condition="not NqHasAtLeast(31812, 2)">
	<BuyInclusionShopItem ItemId="31812" Count="1"/>
	</While>

    <LogMessage Message="Crafted Lv80 Gear!"/>
    <AutoInventoryEquip/>
    <WaitTimer WaitTime="5"/>
	<RunCode Name="Logger" />
	<WaitTimer WaitTime="5"/>
    <LLoadProfile Path="../Start.xml"/>
</Order>
<CodeChunks>
<CodeChunk Name="SwitchCombatJob">
            <![CDATA[ 
            var Combat = Enumerable.Range(8, 11).Append(0).Append(36);
            var gearSets = GearsetManager.GearSets.Where(i => i.InUse && !Combat.Contains((int)i.Class)).ToList().OrderByDescending(i=> i.Gear.First().Item.ItemLevel);

            if (gearSets.Any())
            {
                gearSets.First().Activate();
                await Coroutine.Sleep(2000);
            }
            ]]>
        </CodeChunk>
<CodeChunk Name="SetLisbethJson">
<![CDATA[
    // Try to get profile path and construct relative path from there
    var profilePath = ff14bot.NeoProfiles.NeoProfileManager.CurrentProfile.Path;
    var profileDir = System.IO.Path.GetDirectoryName(profilePath);
    var jsonPath = System.IO.Path.Combine(profileDir, "../Lisbeth/GearSets/GEAR80.json");
    
    var json = System.IO.File.ReadAllText(jsonPath);
    var lisbeth = BotManager.Bots.FirstOrDefault(c => c.Name == "Lisbeth");
    if (lisbeth != null)
    {
        var lisbethObject = lisbeth.GetType().GetProperty("Lisbeth").GetValue(lisbeth);
        if (lisbethObject != null)
				   {
					   Func<Task> executeWithRetry = null;
					   executeWithRetry = async () => {
						   try 
						   {
							   var orderMethod = lisbethObject.GetType().GetMethod("ExecuteOrders");
							   await (Task<bool>)orderMethod.Invoke(lisbethObject, new object[] { json, false });
						   }
						   catch (Exception ex) when (
							   ex.ToString().Contains("HttpRequestException") || 
							   ex.ToString().Contains("No response from the server") ||
							   ex.ToString().Contains("Max sessions reached")
						   )
						   {
							   // Log and stop gently
							   ff14bot.Helpers.Logging.Write("[MaxSessionRestarter] Attempting to stop Lisbeth gently...");
							   var stopGentlyMethod = lisbethObject.GetType().GetMethod("StopGently");
							   await (Task)stopGentlyMethod.Invoke(lisbethObject, null);
							   
							   // Log and try to exit crafting
							   ff14bot.Helpers.Logging.Write("[MaxSessionRestarter] Attempting to exit crafting state...");
							   try 
							   {
								   var exitCraftingMethod = lisbethObject.GetType().GetMethod("ExitCrafting");
								   await (Task<bool>)exitCraftingMethod.Invoke(lisbethObject, null);
							   }
							   catch {}
							   
							   // Log waiting period
							   ff14bot.Helpers.Logging.Write("[MaxSessionRestarter] Waiting 5 minutes before attempting restart...");
							   await Task.Delay(TimeSpan.FromMinutes(5));
							   
							   // Log and request restart
							   ff14bot.Helpers.Logging.Write("[MaxSessionRestarter] Requesting Lisbeth to restart orders...");
							   var restartMethod = lisbethObject.GetType().GetMethod("RequestRestart");
							   restartMethod.Invoke(lisbethObject, new object[] { json });
							   
							   await executeWithRetry();
						   }
					   };

					   await executeWithRetry();
				   }
    }
]]>
</CodeChunk>
<CodeChunk Name="Logger">
    <![CDATA[
        try
        {
            string workingDirectory = Directory.GetCurrentDirectory();
            string settingsPath = Path.Combine(workingDirectory, "Settings");
            string logFilePath = Path.Combine(settingsPath, $"autocraft.txt");
            
            File.AppendAllText(logFilePath, "craft80" + Environment.NewLine);
        }
        catch (Exception ex)
        {
        }
    ]]>
</CodeChunk>
</CodeChunks>
</Profile>